BEGIN TRANSACTION;
DROP TABLE IF EXISTS "Reservations";
CREATE TABLE IF NOT EXISTS "Reservations" (
	"ReservationID"	INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT UNIQUE,
	"CustomerID"	INTEGER NOT NULL,
	"TableID"	INTEGER,
	"ReservationDateTime"	INTEGER NOT NULL,
	FOREIGN KEY("CustomerID") REFERENCES "Customers"("CustomerID") ON UPDATE CASCADE ON DELETE CASCADE,
	FOREIGN KEY("TableID") REFERENCES "Tables"("TableID") ON UPDATE CASCADE ON DELETE CASCADE
);
DROP TABLE IF EXISTS "Sales";
CREATE TABLE IF NOT EXISTS "Sales" (
	"SaleID"	INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT UNIQUE,
	"SaleContents"	TEXT NOT NULL,
	"SaleDate"	NUMERIC NOT NULL,
	"SaleTotal"	NUMERIC NOT NULL,
	"CustomerID"	INTEGER NOT NULL
);
DROP TABLE IF EXISTS "Customers";
CREATE TABLE IF NOT EXISTS "Customers" (
	"CustomerID"	INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT UNIQUE,
	"CustomerName"	TEXT,
	"CustomerPhone"	INTEGER UNIQUE,
	"CustomerAddress"	INTEGER,
	"CustomerDateCreated"	NUMERIC
);
DROP TABLE IF EXISTS "Products";
CREATE TABLE IF NOT EXISTS "Products" (
	"ProductID"	INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT UNIQUE,
	"ProductName"	TEXT NOT NULL,
	"ProductDesc"	TEXT NOT NULL,
	"ProductPrice"	REAL NOT NULL,
	"ProductType"	INTEGER NOT NULL
);
DROP TABLE IF EXISTS "Tables";
CREATE TABLE IF NOT EXISTS "Tables" (
	"TableID"	INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT UNIQUE,
	"TableNumber"	TEXT NOT NULL
);
COMMIT;
